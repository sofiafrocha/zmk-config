/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt LS(TAB) LEFT_SHIFT   &kp Q  &kp W  &kp E         &kp R  &kp T               &kp Y                    &kp U  &kp I      &kp O    &kp P          &mt RA(DELETE) DELETE
&mt LEFT_CONTROL ESCAPE  &kp A  &kp S  &kp D         &kp F  &kp G               &kp H                    &kp J  &kp K      &kp L    &kp SEMI       &kp ENTER
&kp LEFT_SHIFT           &kp Z  &kp X  &kp C         &kp V  &kp B               &kp N                    &kp M  &kp COMMA  &kp DOT  &kp RIGHT_ALT  &kp RIGHT_SHIFT
                                       &kp LA(LGUI)  &mo 1  &kp LEFT_COMMAND    &mt LG(LA(SPACE)) SPACE  &mo 2  &trans
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3      &kp N4             &kp N5             &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &trans
&trans  &trans  &trans  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans      &trans             &trans             &trans    &trans    &trans  &trans     &trans  &trans
                        &trans      &trans             &trans             &trans    &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL             &kp DOUBLE_QUOTES  &kp HASH           &kp DLLR  &kp PRCNT                      &kp AMPERSAND                      &kp SLASH                            &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL            &trans
&trans  &trans               &trans             &trans             &trans    &trans                         &trans                             &trans                               &trans                &trans                 &mt RS(EQUAL) EQUAL  &trans
&trans  &mt LS(GRAVE) GRAVE  &kp AT_SIGN        &mt LS(SEMI) SEMI  &trans    &mt LS(BACKSLASH) BACKSLASH    &mt LS(SINGLE_QUOTE) SINGLE_QUOTE  &mt LS(RIGHT_BRACKET) RIGHT_BRACKET  &mt LS(SLASH) SLASH   &trans                 &trans               &trans
                                                &trans             &trans    &trans                         &trans                             &trans                               &trans
            >;
        };
    };
};
